package com.gmail.docfordja;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Scanner;

public class Copirator {
	public Copirator() {

	}

	public void newCopy(File first, File second, String format) throws Exception {
        //Создает директории и файлы
		for (File file : first.listFiles()) {
			if (file.isDirectory()) {
				File someFile = new File(file.getAbsolutePath());
				File newDirectory = new File(second.getAbsolutePath() + "\\" + file.getName());
				newDirectory.mkdir();
				for (File fil : someFile.listFiles()) {

					String accept = newDirectory.getName() + "\\" + fil.getName();
					String giveaway = fil.getAbsolutePath();
					File f = new File(second.getAbsolutePath() + "\\" + newDirectory.getName() + "\\" + fil.getName());
					if (validator(fil.getAbsolutePath(), format)) {
						f.createNewFile();
						printer(giveaway, f);
					}
				}
			}

		}
		System.out.println("Done!");
	}
    /*Чмтает и записывает в файл (Заменил кодом, который вы давали на лекции. 
    Как все это это работает ускальзывает от моего понимания, но, кажется, работает)*/
	public void printer(String donor, File path) throws IOException {
		try(InputStream is = new FileInputStream(donor);
				OutputStream os = new FileOutputStream(path)){
			byte[] buffer = new byte[10000000];
			int readByte = 0;
			for(;(readByte = is.read(buffer)) > 0 ; ) {
				os.write(buffer, 0 , readByte);
			}
		}
	}
    //Проверяет соответствие файла выбранному формату, выравнивает регистр
	public boolean validator(String path, String format) {
		int index = -1;
		int vol = 0;
		for (int i = 0; i < path.length(); i++) {
			index = path.indexOf(".", index);
			if (index > 0) {
				vol = index;
			}
		}
		String result = "";
		for (int i = vol + 1; i < path.length(); i++) {
			result += path.charAt(i);
		}
		if (result.toLowerCase().equals(format.toLowerCase())) {
			return true;
		}

		return false;

	}

}
